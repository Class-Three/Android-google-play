name: Build Android APK

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 40  # زيادة وقت الانتظار

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-pip \
          openjdk-8-jdk \
          git \
          zip \
          unzip \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo6 \
          cmake \
          libffi-dev \
          libssl-dev \
          libsqlite3-dev

    - name: Install Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install buildozer==1.4.0
        pip3 install cython==0.29.33
        pip3 install virtualenv
        pip3 install setuptools

    - name: Verify project structure
      run: |
        echo "=== Project Structure ==="
        ls -la
        echo "=== Python Files ==="
        find . -name "*.py" -exec ls -la {} \;
        echo "=== Buildozer Spec ==="
        if [ -f buildozer.spec ]; then
            cat buildozer.spec
        else
            echo "Creating default buildozer.spec..."
            buildozer init
        fi

    - name: Set up Buildozer environment
      run: |
        # إنشاء مجلدات ضرورية لبناء Android
        mkdir -p .buildozer/android/platform
        export PATH="$HOME/.local/bin:$PATH"
        
        # تعيين متغيرات البيئة المطلوبة
        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        export ANDROIDSDK="$HOME/.buildozer/android/platform/android-sdk"
        export ANDROIDNDK="$HOME/.buildozer/android/platform/android-ndk-r23b"
        
        echo "JAVA_HOME set to: $JAVA_HOME"
        echo "Buildozer path: $(which buildozer)"

    - name: Build APK with detailed logging
      run: |
        # تنظيف أي بناء سابق
        buildozer android clean 2>/dev/null || true
        
        echo "=== Starting Buildozer Build Process ==="
        
        # البناء مع التقاط كامل السجلات
        set -o pipefail
        buildozer -v android debug 2>&1 | tee build.log
        BUILD_STATUS=$?
        
        if [ $BUILD_STATUS -eq 0 ]; then
            echo "=== BUILD SUCCESSFUL ==="
            ls -la bin/ || echo "bin directory not found"
        else
            echo "=== BUILD FAILED ==="
            echo "=== Last 30 lines of build log ==="
            tail -30 build.log
            echo "=== Error patterns in log ==="
            grep -i "error\|fail\|exception" build.log | head -20
            exit 1
        fi

    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: bin/*.apk
        retention-days: 7

    - name: Upload build logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          build.log
          .buildozer/**/log.txt
        retention-days: 3
